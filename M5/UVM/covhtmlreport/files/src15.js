var g_data = {"name":"dut/fifo_memory.sv","src":"module fifo_memory #(\n    parameter DATA_WIDTH = 8,\n    parameter ADDR_WIDTH = 6\n)(\n    input  logic                      clk_wr, clk_rd,\n    input  logic                      wr_en, rd_en,\n    input  logic  [ADDR_WIDTH-1:0]    waddr, raddr,\n    input  logic  [DATA_WIDTH-1:0]    data_in,\n    output logic  [DATA_WIDTH-1:0]    data_out,\n    output logic                      half\n);\n	\n    logic [DATA_WIDTH-1:0] mem[2**ADDR_WIDTH-1:0];\n\n    always_ff @(posedge clk_wr) begin\n        if (wr_en) mem[waddr] <= data_in;\n    end\n\n    always_ff @(posedge clk_rd) begin\n        if (rd_en) data_out <= mem[raddr];\n    end\n\n    // Half-full/Half-empty logic\n    // 1 left shifted by ADDR_WIDTH-1 is always half of the FIFO's depth \n    assign half = (raddr-waddr==(1<<(ADDR_WIDTH-1)))||(waddr-raddr==(1<<(ADDR_WIDTH-1))) ? 1'b1 : 1'b0;\n\nendmodule\n","lang":"verilog"};
processSrcData(g_data);